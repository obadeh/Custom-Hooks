{"version":3,"sources":["components/modal/modal.module.scss","components/if/index.js","components/modal/index.js","components/hooks/form.js","components/hooks/fetch.js","components/todo/todo-connected.js","app.js","index.js"],"names":["module","exports","render","condition","children","When","props","Modal","className","styles","modal","title","onClick","close","useForm","callback","useState","values","setValues","event","preventDefault","target","reset","onChange","persist","name","value","console","log","useFetch","lists","url","method","body","handler","errorHandler","fetch","mode","cache","headers","JSON","stringify","undefined","then","response","json","data","catch","e","error","todoAPI","Todo2","callAPI","newItem","setTodoList","todoList","handleSubmit","handleChange","showDetails","setShowDetails","details","setDetails","toggleComplete","id","updatedItem","filter","i","_id","complete","map","toggleDetails","showDetails1","details1","useEffect","results","length","onSubmit","placeholder","type","min","max","defaultValue","toString","key","text","assignee","due","App","React","Component","Main","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.7fb7d159.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__2bhYs\"};","import React from 'react';\n\nconst render = (condition = false, children = null) => {\n  return condition ? children : null;\n};\n\nexport const If = props =>\n  React.Children.map(props.children, child =>\n    React.cloneElement(child, { condition: props.condition }),\n  );\n\nexport const Then = props => render(props.condition, props.children);\nexport const Else = props => render(!props.condition, props.children);\n\n/*\n<When condition={true}>\n  <h2>When Works</h2>\n</When>\n*/\nexport const When = props => render(props.condition, props.children);\n\n/*\n<Unless condition={administrator}>\n  Pay more $$ and we will make you an admin\n</Unless>\n*/\nexport const Unless = props => render(!props.condition, props.children);\n","import React from 'react';\n\nimport styles from './modal.module.scss';\n\nconst Modal = props => {\n  return (\n    <div className={styles.modal}>\n      <div>\n        <header>\n          <span className=\"title\">{props.title}</span>\n          <button onClick={props.close}>X</button>\n        </header>\n        <div>{props.children}</div>\n      </div>\n    </div>\n  );\n};\nexport default Modal;\n","import { useState } from 'react';\n\nconst useForm = (callback) => {\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event){\n      event.preventDefault();\n      event.target.reset();\n    }\n\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues(values => ({...values, [event.target.name] : event.target.value }));\n    console.log('values : ', values);\n  };\n\n  const handleInput = {\n    onChange: (event) => {\n      event.persist();\n      setValues(values => ({...values, [event.target.name] : event.target.value }));\n    },\n  };\n\n  return [handleSubmit, handleInput, handleChange, values];\n};\n\nexport default useForm;","import { useState } from 'react';\n\nconst useFetch = (callback) => {\n  const [lists, setLists] = useState({});\n\n  const callAPI = (url, method = 'get', body, handler, errorHandler) => {\n    return fetch(url, {\n      method: method,\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: { 'Content-Type': 'application/json' },\n      body: body ? JSON.stringify(body) : undefined,\n    })\n      .then(response => response.json())\n      .then(data => typeof handler === 'function' ? handler(data) : null )\n      .catch( (e) => typeof errorHandler === 'function' ? errorHandler(e) : console.error(e)  );\n  };\n\n  return [lists, callAPI];\n\n};\n\nexport default useFetch;","/* eslint-disable no-undefined */\nimport React, { useState, useEffect } from 'react';\nimport { When } from '../if';\nimport Modal from '../modal';\nimport useForm from '../hooks/form.js';\nimport useFetch from '../hooks/fetch.js'\n\nimport './todo.scss';\n\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n\nconst Todo2 = (props) =>{\n\n\n\n  const [lists, callAPI] = useFetch();\n\n  const addItem = () => {\n    const _updateState = newItem =>\n      setTodoList([...todoList, newItem]);\n\n    callAPI( todoAPI, 'POST', values, _updateState );\n\n  };\n\n  // from form hook\n  const [handleSubmit, handleInput, handleChange, values] = useForm(addItem);\n\n  const [todoList,setTodoList] = useState([]);\n  // const [item,setItem] = useState({});\n  const [showDetails,setShowDetails] = useState(false);\n  const [details,setDetails] = useState({});\n\n  const deleteItem = id => {\n\n    const _updateState = (results) =>\n\n      setTodoList(todoList.filter(values => values._id !== id));\n\n    callAPI( `${todoAPI}/${id}`, 'DELETE', undefined, _updateState );\n\n  };\n\n  const saveItem = updatedItem => {\n\n    const _updateState = (newItem) =>\n      setTodoList(todoList.map(values =>\n        values._id === newItem._id ? newItem : values,\n      ));\n\n\n\n    callAPI( `${todoAPI}/${updatedItem._id}`, 'PUT', updatedItem, _updateState );\n\n  };\n\n  const toggleComplete = id => {\n    let values = todoList.filter(i => i._id === id)[0] || {};\n    if (values._id) {\n      values.complete = !values.complete;\n      saveItem(values);\n    }\n  };\n\n  const toggleDetails = id => {\n    let showDetails1 = ! showDetails;\n    let details1 = todoList.filter( values => values._id === id )[0] || {};\n    console.log('todoList : ', todoList);\n    setDetails(details1);\n    console.log('details : ', details);\n    setShowDetails(showDetails1);\n  };\n\n  const getTodoItems = () => {\n    const _updateState = data => setTodoList(data.results);\n    callAPI( todoAPI, 'GET', undefined, _updateState );\n  };\n\n  useEffect(() => {\n    getTodoItems();\n  });\n\n  return (\n    <>\n      <header>\n        <h2>\n            There are\n          {todoList.filter( values => !values.complete ).length}\n            Items To Complete\n        </h2>\n      </header>\n\n      <section className=\"todo\">\n\n        <div>\n          <h3>Add Item</h3>\n          <form onSubmit={handleSubmit}>\n            <label>\n              <span>To Do Item</span>\n              <input\n                name=\"text\"\n                placeholder=\"Add To Do List Item\"\n                onChange={handleChange}\n              />\n            </label>\n            <label>\n              <span>Difficulty Rating</span>\n              <input type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" defaultValue=\"3\" onChange={handleChange} />\n            </label>\n            <label>\n              <span>Assigned To</span>\n              <input type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleChange} />\n            </label>\n            <label>\n              <span>Due</span>\n              <input type=\"date\" name=\"due\" onChange={handleChange} />\n            </label>\n            <button>Add Item</button>\n          </form>\n        </div>\n\n        <div>\n          <ul>\n            { todoList.map(values => (\n              <li\n                className={`complete-${values.complete.toString()}`}\n                key={values._id}\n              >\n                <span onClick={() => toggleComplete(values._id)}>\n                  {values.text}\n                </span>\n                <button onClick={() => toggleDetails(values._id)}>\n                    Details\n                </button>\n                <button onClick={() => deleteItem(values._id)}>\n                    Delete\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </section>\n\n      <When condition={showDetails}>\n        <Modal title=\"To Do Item\" close={toggleDetails}>\n          <div className=\"todo-details\">\n            <header>\n              <span>Assigned To: {details.assignee}</span>\n              <span>Due: {details.due}</span>\n            </header>\n            <div className=\"item\">\n              {details.text}\n            </div>\n          </div>\n        </Modal>\n      </When>\n    </>\n  );\n};\n\n\nexport default Todo2;\n","import React from 'react';\n\n\nimport ToDo from './components/todo/todo-connected.js';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div>\n        <ToDo />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}